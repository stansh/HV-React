{"version":3,"sources":["components/Header.js","components/HealthThing.js","shared/menu.js","components/Menu.js","components/Snacks.js","components/Recipes.js","components/CateringForm.js","components/Footer.js","components/Main.js","shared/snacks.js","redux/snacks_reducer.js","redux/menu_reducer.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","useState","collapsed","setCollapsed","sticky","expand","className","href","src","width","alt","onClick","isOpen","navbar","NavLink","to","HealthThing","in","transformProps","exitTransform","MENU","size","description","price","connect","state","menu","list","map","line","key","id","hover","snacks","items","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","item","onExiting","onExited","altText","captionText","selection","captionHeader","caption","onClickHandler","newIndex","direction","directionText","R1","setIsOpen","outline","color","block","style","marginBottom","R2","R3","R4","Recipes","required","val","maxLength","len","minLength","isNumber","isNaN","validEmail","test","CateringForm","firstName","lastName","phoneNum","email","agree","contactType","feedback","touched","values","console","log","JSON","stringify","alert","model","onSubmit","handleSubmit","htmlFor","md","text","name","placeholder","validators","show","component","messages","offset","check","checkbox","select","textarea","rows","type","Component","Footer","Link","role","Main","Switch","Route","path","Snacks","this","Redirect","SNACKS","snacksReducer","action","menuReducer","store","createStore","combineReducers","App","BrowserRouter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41eada34.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand,Nav, NavItem} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed);\r\n\r\n  return (\r\n    \r\n     \r\n      <Navbar  sticky=\"top\" expand=\"md\" className=\"navbar-light \">\r\n        <NavbarBrand href=\"/\" className=\"ml-auto\"><img src=\"HV-React/images/logo.png\"  width=\"100\" alt=\"Logo\" /></NavbarBrand>\r\n        <NavbarToggler onClick={toggleNavbar}   className=\"mr-2\" />\r\n        <Collapse isOpen={!collapsed} navbar>\r\n          <Nav navbar className=\"mr-auto\">\r\n            <NavItem>\r\n              <NavLink className=\"nav-link rounded\" to=\"/healththing\"><strong>the health thing</strong></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"nav-link rounded\" to=\"/snacks\"><strong>snacks</strong></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"nav-link rounded\" to=\"/recipes\"><strong>our recipes</strong></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className=\"nav-link rounded\" to=\"/catering\"><strong>catering</strong></NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n      \r\n    \r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n  Card, CardText, CardBody,\r\n  CardTitle, ListGroup, ListGroupItem \r\n} from 'reactstrap';\r\nimport { FadeTransform,Stagger } from 'react-animation-components';\r\n\r\n\r\nconst HealthThing = (props) => {\r\n  return (\r\n    <div className='container'>\r\n         <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(1) translateX(-10%)'\r\n            }}>\r\n            <div className='row my-2'>\r\n            \r\n                <div className='col-md '>   \r\n                    <img width=\"100%\" src=\"HV-React/images/pic21.jpg\" alt=\"Card image cap\" className='rounded'/>\r\n                </div> \r\n                \r\n                \r\n\r\n                <div className='col-md'>\r\n                <Card>\r\n                    <CardBody className='col-md text-align-right'>\r\n                        <CardTitle>Why hummus is great?</CardTitle>\r\n                        <CardText>Hummus is typically made by blending chickpeas (garbanzo beans), tahini (ground sesame seeds), olive oil, lemon juice and garlic in a food processor. Not only is hummus delicious, but it is also versatile, packed with nutrients and has been linked to many impressive health and nutritional benefits. Hummus provides a wide variety of vitamins and minerals. It is also a great plant-based source of protein, which makes it a nutritious option for vegans and vegetarians.</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </div>            \r\n            </div>\r\n        </FadeTransform>\r\n      \r\n      <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(1) translateX(10%)'\r\n            }}>\r\n                \r\n            <div className='row'>\r\n                <div className='col-md'>   \r\n                    <img width=\"100%\" src=\"HV-React/images/pic31.jpg\" alt=\"Card image cap\" className='rounded' />\r\n                </div> \r\n                <div className='col-md'>\r\n                <Card>\r\n                    <CardBody className='col-md text-align-right'>\r\n                        <CardTitle>Why is it important to eat vegetables?</CardTitle>\r\n                        <CardText>\r\n                        <ListGroup>\r\n                            <ListGroupItem>Most vegetables are naturally low in fat and calories. None have cholesterol. (Sauces or seasonings may add fat, calories, and/or cholesterol.)</ListGroupItem>\r\n                            <ListGroupItem>Vegetables are important sources of many nutrients, including potassium, dietary fiber, folate (folic acid), vitamin A, and vitamin C</ListGroupItem>\r\n                            <ListGroupItem>Diets rich in potassium may help to maintain healthy blood pressure. Vegetable sources of potassium include sweet potatoes, white potatoes, white beans, tomato products (paste, sauce, and juice), beet greens, soybeans, lima beans, spinach, lentils, and kidney beans.</ListGroupItem>\r\n                            \r\n                        </ListGroup>\r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </div>\r\n            </div>\r\n        \r\n      </FadeTransform>\r\n      \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default HealthThing;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <div class = \"container\">\r\n            <div class=\"row pb-1\">\r\n                    <h3>It's not rocket science..</h3>\r\n                </div>\r\n                <hr>\r\n        <div class = \"row\">\r\n            <div class = \"col-md\">\r\n                <img class = \"rounded\"  width=500px src=\"images/pic21.jpg\" alt=\"\">\r\n            </div>\r\n            <div class = \"col-md\">\r\n                <div class=\"card\" >\r\n                    <div class=\"card-body\" id=\"indexCard\">\r\n                    \r\n                        <h3 class=\"card-title\">Why hummus is great</h3>\r\n                        <p class =\"card-text\">Hummus is typically made by blending chickpeas (garbanzo beans), tahini (ground sesame seeds), olive oil, lemon juice and garlic in a food processor. Not only is hummus delicious, but it is also versatile, packed with nutrients and has been linked to many impressive health and nutritional benefits. Hummus provides a wide variety of vitamins and minerals. It is also a great plant-based source of protein, which makes it a nutritious option for vegans and vegetarians.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n        <div class = \"row \">\r\n                <div class = \"col-sm\">\r\n                    <img class = \"rounded \" width=500px  src=\"images/pic31.jpg\" alt=\"\">\r\n                </div>\r\n                <div class = \"col-sm\">\r\n                    <div class=\"card\" >\r\n                        <div class=\"card-body\" id=\"indexCard\">\r\n                        \r\n                            <h3 class=\"card-title mx-2\" >Why is it important to eat vegetables</h3>\r\n                            <p class =\"card-text >\r\n                                <ul class=\"list-group list-group-flush\">\r\n                                    <li class=\"list-group-item\">Most vegetables are naturally low in fat and calories. None have cholesterol. (Sauces or seasonings may add fat, calories, and/or cholesterol.)</li>\r\n                                    <li class=\"list-group-item\">Vegetables are important sources of many nutrients, including potassium, dietary fiber, folate (folic acid), vitamin A, and vitamin C.</li>\r\n                                    <li class=\"list-group-item\">Diets rich in potassium may help to maintain healthy blood pressure. Vegetable sources of potassium include sweet potatoes, white potatoes, white beans, tomato products (paste, sauce, and juice), beet greens, soybeans, lima beans, spinach, lentils, and kidney beans.</li>\r\n                                    \r\n                                </ul>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>\r\n    </div> */}","export const MENU = [\r\n    {  \r\n        size: 'Small Plate',\r\n        description: '2 choices of hummus, 2 choices of veggies, 2 pitas',\r\n        price: '$ 6.99'   \r\n    },\r\n    {  \r\n        size: 'Medium Plate',\r\n        description: '3 choices of hummus, 4 choices of veggies, 3 pitas',\r\n        price: '$ 8.99'   \r\n    },{  \r\n        size: 'Large Plate',\r\n        description: '5 choices of hummus, 5 choices of veggies, 5 pitas',\r\n        price: '$11.99'   \r\n    },{  \r\n        size: '32 oz Container of Hummus',\r\n        description: '',\r\n        price: '$24.99'   \r\n    },{  \r\n        size: '22 oz Container of Hummus',\r\n        description: '',\r\n        price: '$18.99'   \r\n    },{  \r\n        size: '32 oz Jar of Fesh Juice',\r\n        description: '',\r\n        price: '$12.99'   \r\n    },{  \r\n        size: '16 oz Jar of Fesh Juice',\r\n        description: '',\r\n        price: '$5.99'   \r\n    },{  \r\n        size: 'Large Juice',\r\n        description: '',\r\n        price: '$7.99'   \r\n    },{  \r\n        size: 'Medium Juice',\r\n        description: '',\r\n        price: '$6.99'   \r\n    },{  \r\n        size: 'Small Juice',\r\n        description: '',\r\n        price: '$4.99'   \r\n    }\r\n    \r\n\r\n]","import React from 'react';\r\nimport {Table} from 'reactstrap';\r\nimport { MENU } from '../shared/menu';\r\nimport { connect } from 'react-redux';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst mapStateToProps = state =>  {\r\n    return {\r\n      menu: state.menu \r\n    };\r\n   \r\n  };\r\n\r\n\r\n\r\nfunction Menu () {\r\n    \r\n    \r\n    const list = MENU.map(line =>{\r\n        \r\n        return (\r\n            \r\n            <Fade in key ={line.id}>\r\n            <div >\r\n                \r\n                <Table  hover >\r\n                    <tbody className = 'text-center'>\r\n                    <tr className = 'row'>\r\n                    <td className = 'col text-white'>{line.size}</td>\r\n                    <td className = 'col text-white '>{line.description} </td>\r\n                    <td className = 'col text-white'>{line.price}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                \r\n            </div>\r\n            </Fade>\r\n            \r\n           \r\n        );\r\n       \r\n        \r\n    });\r\n\r\n    return (\r\n        \r\n       <div > <h2 className='text-center'>Our Menu</h2>{list}</div>\r\n       \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n\r\n/* const MENU = [\r\n    {  \r\n        id: 0,\r\n        size: 'Small',\r\n        description: '2 choices of hummus, 2 choices of veggies, 2 pitas',\r\n        price: '$ 6.99'   \r\n    },\r\n    {  \r\n        id: 1,\r\n        size: 'Medium',\r\n        description: '3 choices of hummus, 4 choices of veggies, 3 pitas',\r\n        price: '$ 8.99'   \r\n    },{  \r\n        id: 2,\r\n        size: 'Large',\r\n        description: '5 choices of hummus, 5 choices of veggies, 5 pitas',\r\n        price: '$11.99'   \r\n    },{  \r\n        id: 3,\r\n        size: '32 oz Container of Hummus',\r\n        description: '',\r\n        price: '$24.99'   \r\n    },{  \r\n        id: 4,\r\n        size: '22 oz Container of Hummus',\r\n        description: '',\r\n        price: '$18.99'   \r\n    },{  \r\n        id: 5,\r\n        size: '32 oz Jar of Fesh Juice',\r\n        description: '',\r\n        price: '$12.99'   \r\n    },{  \r\n        id: 6,\r\n        size: '16 oz Jar of Fesh Juice',\r\n        description: '',\r\n        price: '$5.99'   \r\n    },{  \r\n        id: 7,\r\n        size: 'Large',\r\n        description: '',\r\n        price: '$7.99'   \r\n    },{  \r\n        id: 8,\r\n        size: 'Medium',\r\n        description: '',\r\n        price: '$6.99'   \r\n    },{  \r\n        id: 9,\r\n        size: 'Snmall',\r\n        description: '',\r\n        price: '$4.99'   \r\n    }\r\n    \r\n\r\n]; */","import React, { useState } from 'react';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from 'reactstrap';\r\nimport Menu from './Menu';\r\n/* import {SNACKS} from '../shared/snacks'; */\r\n/* import { withRouter} from 'react-router-dom'; */\r\nimport { connect } from 'react-redux';\r\nimport { FadeTransform,Stagger } from 'react-animation-components';\r\n\r\n\r\nconst mapStateToProps = state =>  {\r\n  return {\r\n    snacks: state.snacks \r\n  };\r\n \r\n};\r\n\r\n\r\n\r\nconst Snacks = (props) => {\r\n  \r\n  const items = props.snacks;\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      \r\n      <CarouselItem \r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img src={item.src} width='100%' alt={item.altText} />\r\n        <CarouselCaption captionText={item.selection} captionHeader={item.caption} />\r\n      </CarouselItem>\r\n    \r\n    );\r\n  });\r\n\r\n  return (\r\n        <div className = 'container'>\r\n          <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(1) translateY(-50%)'\r\n            }}>\r\n          <div className = 'row'>\r\n            <Carousel\r\n              activeIndex={activeIndex}\r\n              next={next}\r\n              previous={previous}\r\n            >\r\n              <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n              {slides}\r\n              <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous}  />\r\n              <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />  \r\n            </Carousel>\r\n            </div>\r\n            </FadeTransform>\r\n            <div >\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(1) translateY(50%)'\r\n            }}>\r\n              <Menu />\r\n              </FadeTransform>\r\n            </div>\r\n            \r\n        </div>\r\n     \r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps)(Snacks);","import React, { useState } from 'react';\r\nimport { Collapse, Button, CardBody, Card, ListGroupItem, ListGroup } from 'reactstrap';\r\nimport { FadeTransform,Stagger,Fade } from 'react-animation-components';\r\n\r\n\r\nconst R1 = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className = \"row\">\r\n      \r\n               \r\n      <Button  outline color=\"success\" size=\"lg\" block onClick={toggle} style={{ marginBottom: '1rem' }}>Recipe #1</Button>\r\n      <Collapse isOpen={isOpen}>\r\n      \r\n        <Card >\r\n        \r\n          <CardBody >\r\n              <ListGroup >\r\n                  <ListGroupItem>Start by prepping all of your ingredients: Drain 15½ oz. chickpeas in a strainer or colander and rinse thoroughly. Let drain again while you do the other prep.</ListGroupItem>\r\n                  <ListGroupItem>Cut 1 lemon in half, remove any visible seeds, and squeeze juice into a small bowl. You should have 3–4 Tbsp.</ListGroupItem>\r\n                  <ListGroupItem>Smash 1 garlic clove with the flat side of your knife on a cutting board and remove peel. Continue to mash with side of knife until a paste forms. (You can also grate garlic on a microplane if you have one—you're just looking for a fine paste.)</ListGroupItem>\r\n                  <ListGroupItem>Combine drained chickpeas, 3 Tbsp. lemon juice, garlic, ½ cup tahini, ¾ tsp. salt, 10 cracks pepper, ¼ tsp. cumin, and 2 Tbsp. water in a food processor.</ListGroupItem>\r\n                  <ListGroupItem>Process until smooth, about 1 minute.With the motor running, stream in 3 Tbsp. oil, then continue to process until hummus is very light and creamy, about 1 minute longer. Taste and season with more salt, if needed.</ListGroupItem>\r\n              </ListGroup>\r\n              \r\n          </CardBody>\r\n          \r\n        </Card>\r\n       \r\n              \r\n      </Collapse>\r\n        \r\n    </div>\r\n  );\r\n}\r\nconst R2 = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className = \"row\">\r\n      <Button outline color=\"success\" size=\"lg\" block  onClick={toggle} style={{ marginBottom: '1rem' }}>Recipe #2</Button>\r\n      <Collapse isOpen={isOpen}>\r\n        <Card>\r\n          <CardBody>\r\n              <ListGroup>\r\n                    <ListGroupItem>Add the chickpeas to your blender and make sure to reserve the liquid (it’s called aquafaba). If you forget and accidentally toss it, no worries, just use water.</ListGroupItem>\r\n                    <ListGroupItem>Add the tahini (which I also make in my Vitamix), olive oil, fresh lemons, garlic, cumin and salt to the blender. Use two garlic cloves for your basic hummus, but if you’re a garlic lover like me, feel free to add more. Roasted garlic is also divine.</ListGroupItem>\r\n                    <ListGroupItem>Turn your Vitamix on high and use the tamper as you would when making almond butter to push the ingredients into the blades. After 30 seconds, it should be fully blended. </ListGroupItem>\r\n                    <ListGroupItem>Your hummus will be thick, creamy and smooth. If you’d like a thinner consistency, just add a bit more aquafaba or water until it’s your desired consistency.</ListGroupItem>\r\n                    <ListGroupItem>To serve, add a few large, heaping spoonfuls to a plate or bowl and give it a swish depression on top. This creates a little divot for your olive oil to stay in. Then sprinkle some paprika and add fresh parsley</ListGroupItem>\r\n                    <ListGroupItem>Scrape the hummus into a serving bowl or platter, and use a spoon to create nice swooshes on top</ListGroupItem>\r\n              </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst R3 = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className = \"row\">\r\n      <Button outline color=\"success\" size=\"lg\" block  onClick={toggle} style={{ marginBottom: '1rem' }}>Recipe #3</Button>\r\n      <Collapse isOpen={isOpen}>\r\n        <Card>\r\n          <CardBody>\r\n              <ListGroup>\r\n                    <ListGroupItem>In the bowl of a food processor, combine the tahini and lemon juice and process for 1 minute, scrape the sides and bottom of the bowl then process for 30 seconds more</ListGroupItem>\r\n                    <ListGroupItem>Add the olive oil, minced garlic, cumin, and a 1/2 teaspoon of salt to the whipped tahini and lemon juice</ListGroupItem>\r\n                    <ListGroupItem>With the food processor turned on, slowly add 2 to 3 tablespoons of water until you reach the perfect consistency</ListGroupItem>\r\n                    <ListGroupItem>Taste for salt and adjust as needed. Serve hummus with a drizzle of olive oil and dash of paprika</ListGroupItem>\r\n              </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\nconst R4 = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className = \"row\">\r\n      <Button outline color=\"success\" size=\"lg\" block  onClick={toggle} style={{ marginBottom: '1rem' }}>Recipe #4</Button>\r\n      <Collapse isOpen={isOpen}>\r\n        <Card>\r\n          <CardBody>\r\n              <ListGroup>\r\n                   <ListGroupItem>Add all the ingredients to your Vitamix or high-powered blender and secure the lid. Remove the lid cap and insert the tamper</ListGroupItem>\r\n                    <ListGroupItem>Turn the blender on high for 30 seconds (or more for a creamier texture) and use the tamper to push the hummus into the blades. Add more chickpea liquid (aquafaba), if desired, for a softer hummus</ListGroupItem>\r\n                    <ListGroupItem>Add the hummus to a serving plate and garnish with olive oil, paprika and fresh parsley.</ListGroupItem>\r\n                    <ListGroupItem>The hummus will last for up to a week in the fridge, if kept in a sealed container. You can also freeze the hummus in sealed containers for future use, then just thaw as needed. It's actually one of the most common foods I meal prep on a regular basis as it's so easy</ListGroupItem>\r\n              </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst Recipes = () => {\r\n  return(\r\n    <div className ='container'>\r\n      <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(1) translateY(-100%)'\r\n            }}>\r\n       <div className='row'>\r\n       <div className='col-md-4'>\r\n          <img width=\"100%\" src=\"HV-React/images/pic30.jpg\" alt=\"Card image cap\"className='rounded'/>\r\n        </div>\r\n         <div className='col'>\r\n      \r\n             \r\n            <R1 />\r\n            <R2 />\r\n            <R3 />\r\n            <R4 />\r\n            \r\n     \r\n       </div>\r\n      \r\n        \r\n       \r\n      </div>\r\n\r\n      </FadeTransform>\r\n      \r\n    </div>\r\n    \r\n    \r\n        \r\n                \r\n    \r\n   \r\n  );\r\n}\r\n\r\n\r\nexport default Recipes;","import React, { Component } from 'react';\r\nimport { Button, Label, Col, Row } from 'reactstrap';\r\nimport { Control, LocalForm, Errors} from 'react-redux-form';\r\nimport { FadeTransform,Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = val => val && val.length;   \r\nconst maxLength = len => val => !val || (val.length <= len);  \r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass CateringForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\nhandleSubmit(values) {\r\n    console.log('Current State is: ' + JSON.stringify(values));\r\n    alert('Current State is: ' + JSON.stringify(values));\r\n    // this.props.resetFeedbackForm();\r\n//     this.props.postFeedback();\r\n}\r\n\r\n\r\nrender() {\r\n        \r\n    return (\r\n\r\n                <div className=\"container\">\r\n                    <FadeTransform\r\n                        in\r\n                        transformProps={{\r\n                            exitTransform: 'scale(1) translateY(-50%)'\r\n                        }}>\r\n                        <div className='row'> \r\n                        <div className ='col-md-6'>\r\n                            <LocalForm model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}> {/* model=\"feedbackForm */}\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                        <Col md={10}>\r\n                                        <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                                placeholder=\"First Name\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, \r\n                                                    minLength: minLength(2),\r\n                                                    maxLength: maxLength(15)\r\n                                                }}\r\n                                            />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".firstName\"\r\n                                                show=\"touched\" // show error if user left the column wthout meeting unput equirements\r\n                                                component=\"div\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be at least 2 characters',\r\n                                                    maxLength: 'Must be 15 characters or less'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                                placeholder=\"Last Name\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required,\r\n                                                    minLength: minLength(2),\r\n                                                    maxLength: maxLength(15)\r\n                                                }}\r\n                                            />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".lastName\"\r\n                                                show=\"touched\"\r\n                                                component=\"div\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be at least 2 characters',\r\n                                                    maxLength: 'Must be 15 characters or less'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                                placeholder=\"Phone number\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required,\r\n                                                    minLength: minLength(10),\r\n                                                    maxLength: maxLength(15),\r\n                                                    isNumber\r\n                                                }}\r\n                                            />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".phoneNum\"\r\n                                                show=\"touched\"\r\n                                                component=\"div\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be at least 10 numbers',\r\n                                                    maxLength: 'Must be 15 numbers or less',\r\n                                                    isNumber: 'Must be a number'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                                placeholder=\"Email\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required,\r\n                                                    validEmail\r\n                                                }}\r\n                                            />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".email\"\r\n                                                show=\"touched\"\r\n                                                component=\"div\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    validEmail: 'Invalid email address'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={{size: 4, offset: 2}}>\r\n                                            <div className=\"form-check\">\r\n                                                <Label check>\r\n                                                    <Control.checkbox\r\n                                                        model=\".agree\"\r\n                                                        name=\"agree\"\r\n                                                        className=\"form-check-input\"\r\n                                                    /> {' '}\r\n                                                    <strong>May we contact you?</strong>\r\n                                                </Label>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                                <option>By Phone</option>\r\n                                                <option>By Email</option>\r\n                                            </Control.select>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                                rows=\"12\"\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={{size: 10, offset: 2}}>\r\n                                            <Button type=\"submit\" color=\"primary\">\r\n                                                Send Feedback\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                            </LocalForm>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                        <img width=\"90%\" src=\"HV-React/images/pic44.jpg\" alt=\"Card image cap\" className='rounded'/>\r\n                        </div>\r\n                        </div>\r\n                    </FadeTransform>\r\n                    \r\n                </div>\r\n         \r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default CateringForm;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer className=\"site-footer\" >\r\n            <div className=\"container\">\r\n                <div className=\"row\">             \r\n                    \r\n                        \r\n                            <div className='col my-auto'>\r\n                            <Link to='/'>The Health Thing</Link>\r\n                            <Link to='/snacks'> | Snacks</Link>\r\n                            <Link to='/recipes'> | Recipes</Link>\r\n                            <Link to='/catering'> | Catering</Link> \r\n                            </div>\r\n                            \r\n                            <div className='col my-auto text-center'>\r\n                            <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook-official\" /></a>{' '}\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>{' '}\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" /></a> \r\n                            </div>\r\n                    \r\n                    <div className=\"col \">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-mobile\" /> 1-206-555-1234</a>\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:notreal@notreal.co\"><i className=\"fa fa-envelope\" /> info@hummusveggies.com</a>\r\n                    </div>\r\n                \r\n            </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component} from 'react';\r\nimport Header from './Header';\r\nimport HealthThing from './HealthThing';\r\nimport Snacks from './Snacks';\r\nimport Recipes from './Recipes';\r\nimport CateringForm from './CateringForm';\r\nimport Footer from './Footer'\r\n\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <>\r\n         \r\n         <Header />\r\n         \r\n         <Switch>    \r\n            <Route path='/snacks' component={Snacks} items ={this.props.snacks} />\r\n            <Route path='/healththing' component={HealthThing} />\r\n            <Route path='/recipes' component={Recipes} />\r\n            <Route path='/catering' component={CateringForm} />\r\n            \r\n            <Redirect to='/healththing' />\r\n            \r\n\r\n         </Switch>\r\n         <Footer/>\r\n        \r\n         \r\n        \r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Main;\r\n  ","export const SNACKS = [\r\n    {\r\n      src: 'HV-React/images/CarPic23.png',\r\n      altText: 'Hummus Flavors',\r\n      caption: 'Hummus Flavors',\r\n      selection: 'classic | red pepper | basil pesto | roasted garlic | lemon'\r\n    },\r\n    {\r\n      src: 'HV-React/images/CarPic47.png',\r\n      altText: 'Veggies Selection',\r\n      caption: 'Veggies Selection',\r\n      selection: 'cucumbers | peppers | carrots | celery | broccoli'\r\n    },\r\n    {\r\n      src: 'HV-React/images/CarPic28.png',\r\n      altText: 'Pitas Flavors',\r\n      caption: 'Pitas Flavors',\r\n      selection: 'whole wheat | pita chips | pita with cheese '\r\n    },\r\n    {\r\n      src: 'HV-React/images/CarPic33.png',\r\n      altText: 'Juice Selection',\r\n      caption: 'Juice Selection',\r\n      selection: 'carrot | tomato | orange | mango | apple '\r\n    }\r\n  ];","import { SNACKS } from '../shared/snacks'\r\n\r\n/* export const initialState = {\r\n    snacks: SNACKS\r\n}; */\r\n\r\nexport const snacksReducer = (state = SNACKS, action) => {\r\n    switch (action.type) {\r\n        default:\r\n          return state;\r\n      }\r\n};","import {MENU} from '../shared/menu'\r\n\r\n/* export const initialState = {\r\n    snacks: SNACKS\r\n}; */\r\n\r\nexport const menuReducer = (state = MENU, action) => {\r\n    switch (action.type) {\r\n        default:\r\n          return state;\r\n      }\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport Main from './components/Main'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\n\r\nconst store = ConfigureStore();\r\n\r\n\r\nfunction App () {\r\n  \r\n    return (\r\n      <>\r\n        <Provider store={store}>\r\n          <BrowserRouter>\r\n            <div className=\"App\">\r\n                <Main />\r\n            </div>\r\n          </BrowserRouter>\r\n        </Provider>\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import { createStore,combineReducers } from 'redux';\r\nimport { snacksReducer} from './snacks_reducer';\r\nimport { menuReducer } from './menu_reducer';\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            snacks: snacksReducer,\r\n            menu: menuReducer\r\n            })\r\n    );\r\n\r\n    return store;\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'typeface-kalam';\r\nimport 'typeface-amatic-sc';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}